함수 - 이름 뒤에 소괄호()
      * 작성된 코드의 주소값을 담고 있는 저장공간

    f(x) = 2x+1
        -> 수학에서 보던 유형의 함수
            이 함수의 이름은, 소괄호 앞에 있는 'f'


    f           (x)        =      2x+1
    함수명      매개변수             리턴값

    - 매개변수: 외부의 값과 내부의 로직을 연결(매개체)


함수 선언

    def 함수명 (매개변수, ...):
        실행할 문장
        return 리턴값

        - 파이썬에서의 함수 선언은 앞에 무조건 'def'가 붙음


함수 사용

    함수명 (값1, ...)

        - 앞에 'def'가 없으면 사용


함수를 쓰는 이유

    1. 재사용
        반복되는 로직이 있을 떼, 그 부분을 함수로 빼놓고 원할 때마다 호출할 수 있음.
        * 단, 절대 특정성을 부여해서는 안 된다.

    2. 간결화


함수 선언 순서
    문제) 두 정수를 더하는 함수 구현

    1. 함수명을 생각한다.
        def add():

    2. 매개변수를 생각한다.
        def add(number1, number2):

    3. 실행할 문장을 생각한다.
        def add(number1, number2):
            result = number1 + number2

    4. 리턴값을 생각한다.
        def add(number1, number2):
            result = number1 + number2
            return result


매개변수 선언 방법
    1. packing(args)
        여러 개의 값을 마구잡이로 잡을 때 사용한다

    2. kwargs
        여러 개의 값을 key=value 형식으로 받는다

    3. 언패킹
        함수의 매개변수 칸이 *로 시작하면, kwargs 형식과 동일하게 받아야 하고,
        매개변수만 나열되어 있으면 값만 전달해도 된다.


packing(args) 함수 사용 방법
    1. 여러 개의 값을 콤마(,)로 구분해서 전달
    2. 여러 개의 값을 묶은 뒤, 앞에 *을 작성해서 전달

kwargs 함수 사용 방법
    1. 여러 개의 값을 콤마로 구분해서, key=value 형식으로 전달
    2. dict 형식으로 정보를 담은 뒤 앞에 **을 붙여서 전달