# 실제 로또 규칙

# 1~45 까지의 번호 중 무작위 7개로 이루어진 리스트가 추첨 한 번
# 한 번의 추첨 내에서는 중복되는 숫자가 없으며, 번호는 오름차순으로 정렬됨

# 당첨 번호 역시 1~45 까지의 중복 없는 무작위 숫자 7개
# 당첨 번호는 오름차순 정렬을 따로 하지 않음
# 그리고 당첨 번호의 마지막(7번째)은 보너스 숫자로 취급

# 내 추첨 한 번과 당첨 번호를 비교해서 몇 개 맞혔는지를 계산하고
# 각 추첨 별 맞힌 개수를 리스트에 담아서 출력
# 그리고 그 결과에 따라 아래 조건 중 가장 높은 등수가 출력
'''
    1등: 앞쪽 6개 번호 전부 일치
    2등: 보너스 번호 일치 + 나머지 번호 중 5개 일치
    3등: 보너스 번호 제외한 나머지 번호 중 5개 일치
    4등: 보너스 번호 제외한 나머지 번호 중 4개 일치
    5등: 보너스 번호 제외한 나머지 번호 중 3개 일치

    나머지는 낙첨
'''

# 위 규칙대로 만든 여러 번의 추첨(리스트)으로 이루어진 최종 추첨 리스트... 를 만들어주는 함수를 만들 것
# 단, 추첨 횟수는 사용자 입력에 따라 설정
# 그리고 예외 상황 발생 시(숫자 말고 다른 걸 입력한다던가...), exception으로 처리

# 출력은 당첨 번호 리스트 먼저 보여주고,
# 내가 추첨한 번호 리스트를 그 다음에 보여줌 - 각 리스트가 끝날때마다 줄바꿈
# 그 밑에 맞힌 개수로 이루어진 리스트를 출력하고
# 마지막에 가장 높은 등수를 출력

# 목표: 함수 구현
# 나중에는 클래스랑 모듈화도...?

# 무작위 추첨 기능을 만들기 위한 random 라이브러리 import
import random


# 로또 추첨 함수
def lotto_draw(num: int):
    # 각 추첨 별 당첨 횟수를 기록하기 위한 리스트 생성
    result = []
    
    # 당첨 번호 생성 - 마지막 번호는 보너스 번호로 쓸 예정
    win_num = [random.randint(1, 45) for i in range(7)]

    # 내 추첨번호 생성 - 1~45 까지의 숫자 중, 중복 없는 7개짜리 번호로 이루어진 리스트 num개
