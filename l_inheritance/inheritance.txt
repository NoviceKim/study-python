- 상속(inheritance)
    1. 기존에 선언된 클래스의 필드를, 새롭게 만들 클래스의 필드로 사용하려고 할 때
    2. 여러 클래스를 선언하면서 공통되는 필드가 있을 경우,
        부모 클래스를 선언한 뒤 겹치는 필드를 구성하고, 각 자식 클래스에 상속해준다(추상화)

- 상속 문법
    class A:
        A 필드

    class B(A):
        A + B 필드


    A: 부모 클래스, 상위 클래스, 슈퍼 클래스, 기반 클래스
    B: 자식 클래스, 하위 클래스, 서브 클래스, 파생 클래스

- super().__init__() - 부모 생성자
    자식 객체로 부모 필드에 접근할 수 있다
    하지만 개발자가 직접 호출하는 것은 자식 생성자 뿐이기 때문에, 자식 생성자만 메모리에 할당된다고 생각할 수 있음

    사실 자식 생성자는 위 메소드(super().__init__())로 항상 부모 생성자를 먼저 호출하기 때문에,
    자식 생성자를 호출하면 부모와 자식이 모두 메모리에 할당된다.

    super().__init__() 을 직접 작성하지 않더라도, 컴파일러가 알아서 넣어준다.


- 오버라이딩(재정의, 무시)
    부모 필드에서 선언한 메소드를 자식 필드에서 수정하려면, 재정의를 해야된다.
    이는 자식에서 부모 필드의 메소드를 같은 이름으로 선언하는 문법을 의미한다.


- 종합 실습 -

    은행 - 예금주, 계좌번호(중복 x), 핸드폰 번호(중복 없음), 비밀번호, 통장잔고

    신한 - 입금 시 수수료 50%

    국민 - 출금 시 수수료 50%

    카카오 - 잔액조회 재산 반토막

    은행은 3개를 선언한다.
    모든 은행 고객을 관리하는 DB를 2차원 list로 선언한다.
    모든 은행은 출금, 입금, 잔액조회, 계좌개설, 계좌번호 중복검사, 로그인, 핸드폰 번호 중복검사 서비스가 있다.
    화면쪽 메뉴는 "계좌개설, 입금하기, 출금하기, 잔액조회, 계좌번호 찾기(새로운 계좌 설정, 핸드폰 번호로 서비스 이용가능), 나가기"로 구성되어 있다.